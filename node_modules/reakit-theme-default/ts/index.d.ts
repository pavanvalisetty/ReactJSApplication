export declare const palette: {
    white: string;
    whiteText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any;
    black: string;
    blackText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any;
    primary: string[];
    primaryText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    secondary: string[];
    secondaryText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    danger: string[];
    dangerText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    alert: string[];
    alertText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    success: string[];
    successText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    grayscale: (string | (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any))[];
    grayscaleText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    background: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    backgroundText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any;
    shadow: string[];
    shadowText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any)[];
    transparent: string;
    transparentText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any;
    border: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
        theme: Theme;
        tone?: number | undefined;
    }) => any;
};
export declare const Avatar: import("styled-components").FlattenSimpleInterpolation;
export declare const Blockquote: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const Button: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const Code: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const Field: import("styled-components").FlattenSimpleInterpolation;
export declare const GroupItem: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const Heading: import("styled-components").FlattenSimpleInterpolation;
export declare const Image: import("styled-components").FlattenSimpleInterpolation;
export declare const Input: import("styled-components").FlattenSimpleInterpolation;
export declare const Link: import("styled-components").FlattenSimpleInterpolation;
export declare const List: import("styled-components").FlattenSimpleInterpolation;
export declare const Overlay: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const Paragraph: import("styled-components").FlattenSimpleInterpolation;
export declare const Popover: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const PopoverArrow: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const Sidebar: import("styled-components").FlattenSimpleInterpolation;
export declare const Table: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const Tabs: import("styled-components").FlattenSimpleInterpolation;
export declare const TabsTab: import("styled-components").FlattenSimpleInterpolation;
export declare const Tooltip: import("styled-components").FlattenSimpleInterpolation;
export declare const TooltipArrow: import("styled-components").FlattenSimpleInterpolation;
declare const _default: {
    palette: {
        white: string;
        whiteText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any;
        black: string;
        blackText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any;
        primary: string[];
        primaryText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        secondary: string[];
        secondaryText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        danger: string[];
        dangerText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        alert: string[];
        alertText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        success: string[];
        successText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        grayscale: (string | (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any))[];
        grayscaleText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        background: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        backgroundText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any;
        shadow: string[];
        shadowText: (<Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any)[];
        transparent: string;
        transparentText: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any;
        border: <Props, Theme extends import("styled-tools").ThemeWithPalette>(props: Props & {
            theme: Theme;
            tone?: number | undefined;
        }) => any;
    };
    Avatar: import("styled-components").FlattenSimpleInterpolation;
    Blockquote: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    Button: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    Code: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    Field: import("styled-components").FlattenSimpleInterpolation;
    GroupItem: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    Heading: import("styled-components").FlattenSimpleInterpolation;
    Image: import("styled-components").FlattenSimpleInterpolation;
    Input: import("styled-components").FlattenSimpleInterpolation;
    Link: import("styled-components").FlattenSimpleInterpolation;
    List: import("styled-components").FlattenSimpleInterpolation;
    Overlay: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    Paragraph: import("styled-components").FlattenSimpleInterpolation;
    Popover: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    PopoverArrow: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    Sidebar: import("styled-components").FlattenSimpleInterpolation;
    Table: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    Tabs: import("styled-components").FlattenSimpleInterpolation;
    TabsTab: import("styled-components").FlattenSimpleInterpolation;
    Tooltip: import("styled-components").FlattenSimpleInterpolation;
    TooltipArrow: import("styled-components").FlattenSimpleInterpolation;
};
export default _default;
