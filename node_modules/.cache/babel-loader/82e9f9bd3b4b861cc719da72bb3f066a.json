{"ast":null,"code":"import { getDocument } from './getDocument.js';\nimport { getWindow } from './getWindow.js';\n\nfunction createKeyboardEvent(element, type, eventInit) {\n  if (eventInit === void 0) {\n    eventInit = {};\n  }\n\n  if (typeof KeyboardEvent === \"function\") {\n    return new KeyboardEvent(type, eventInit);\n  } // IE 11 doesn't support Event constructors\n\n\n  var event = getDocument(element).createEvent(\"KeyboardEvent\");\n  event.initKeyboardEvent(type, eventInit.bubbles, eventInit.cancelable, getWindow(element), eventInit.key, eventInit.location, eventInit.ctrlKey, eventInit.altKey, eventInit.shiftKey, eventInit.metaKey);\n  return event;\n}\n/**\n * Creates and dispatches `KeyboardEvent` in a way that also works on IE 11.\n *\n * @example\n * import { fireKeyboardEvent } from \"reakit-utils\";\n *\n * fireKeyboardEvent(document.getElementById(\"id\"), \"keydown\", {\n *   key: \"ArrowDown\",\n *   shiftKey: true,\n * });\n */\n\n\nfunction fireKeyboardEvent(element, type, eventInit) {\n  return element.dispatchEvent(createKeyboardEvent(element, type, eventInit));\n}\n\nexport { fireKeyboardEvent };","map":null,"metadata":{},"sourceType":"module"}