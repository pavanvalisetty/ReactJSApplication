{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport { useButton } from '../Button/Button.js';\nimport { D as DISCLOSURE_KEYS } from '../__keys-e6a5cfbe.js';\nvar useDisclosure = createHook({\n  name: \"Disclosure\",\n  compose: useButton,\n  keys: DISCLOSURE_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlOnClick = _ref.onClick,\n        ariaControls = _ref[\"aria-controls\"],\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onClick\", \"aria-controls\"]);\n\n    var onClickRef = useLiveRef(htmlOnClick);\n    var controls = ariaControls ? ariaControls + \" \" + options.baseId : options.baseId;\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current, _options$toggle;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      (_options$toggle = options.toggle) === null || _options$toggle === void 0 ? void 0 : _options$toggle.call(options);\n    }, [options.toggle]);\n    return _objectSpread2({\n      \"aria-expanded\": !!options.visible,\n      \"aria-controls\": controls,\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar Disclosure = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useDisclosure\n});\nexport { Disclosure, useDisclosure };","map":null,"metadata":{},"sourceType":"module"}