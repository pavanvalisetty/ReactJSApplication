{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useContext, useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport 'reakit-utils/createEvent';\nimport 'reakit-utils/useSealedState';\nimport 'reakit-utils/createOnKeyDown';\nimport 'reakit-utils/getDocument';\nimport '../reverse-30eaa122.js';\nimport '../getCurrentId-5aa9849e.js';\nimport '../findEnabledItemById-8ddca752.js';\nimport '../__keys-6b7fda7f.js';\nimport '../Group/Group.js';\nimport '../Id/IdProvider.js';\nimport '../Id/Id.js';\nimport 'reakit-utils/isTextField';\nimport 'reakit-utils/ensureFocus';\nimport '../setTextFieldValue-78ab5d56.js';\nimport '../Composite/CompositeItem.js';\nimport 'reakit-utils/applyState';\nimport '../Id/IdState.js';\nimport '../Composite/CompositeState.js';\nimport { g as FORM_RADIO_KEYS } from '../__keys-54ad6269.js';\nimport { f as formatInputName } from '../getInputId-aa144169.js';\nimport '../getLabelId-3db05e97.js';\nimport { unstable_getIn } from './utils/getIn.js';\nimport '../shouldShowError-e8a86b53.js';\nimport './FormGroup.js';\nimport 'reakit-warning/warning';\nimport '../__keys-018f251c.js';\nimport { useRadio } from '../Radio/Radio.js';\nimport { FormRadioGroupContext } from './FormRadioGroup.js';\nvar unstable_useFormRadio = createHook({\n  name: \"FormRadio\",\n  compose: useRadio,\n  keys: FORM_RADIO_KEYS,\n  useOptions: function useOptions(options, htmlProps) {\n    var name = options.name || htmlProps.name;\n    var value = typeof options.value !== \"undefined\" ? options.value : htmlProps.value;\n    var composite = useContext(FormRadioGroupContext);\n    var currentChecked = unstable_getIn(options.values, name);\n    var checked = currentChecked === value;\n\n    if (!composite) {\n      // TODO: Better error\n      throw new Error(\"Missing FormRadioGroup\");\n    }\n\n    return _objectSpread2(_objectSpread2(_objectSpread2({}, options), composite), {}, {\n      checked: checked,\n      name: name,\n      value: value\n    });\n  },\n  useProps: function useProps(options, _ref) {\n    var htmlOnChange = _ref.onChange,\n        htmlOnBlur = _ref.onBlur,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"onBlur\"]);\n\n    var onChangeRef = useLiveRef(htmlOnChange);\n    var onBlurRef = useLiveRef(htmlOnBlur);\n    var onChange = useCallback(function (event) {\n      var _onChangeRef$current, _options$update;\n\n      (_onChangeRef$current = onChangeRef.current) === null || _onChangeRef$current === void 0 ? void 0 : _onChangeRef$current.call(onChangeRef, event);\n      if (event.defaultPrevented) return;\n      (_options$update = options.update) === null || _options$update === void 0 ? void 0 : _options$update.call(options, options.name, options.value);\n    }, [options.update, options.name, options.value]);\n    var onBlur = useCallback(function (event) {\n      var _onBlurRef$current, _options$blur;\n\n      (_onBlurRef$current = onBlurRef.current) === null || _onBlurRef$current === void 0 ? void 0 : _onBlurRef$current.call(onBlurRef, event);\n      if (event.defaultPrevented) return;\n      (_options$blur = options.blur) === null || _options$blur === void 0 ? void 0 : _options$blur.call(options, options.name);\n    }, [options.blur, options.name]);\n    return _objectSpread2({\n      name: formatInputName(options.name),\n      onChange: onChange,\n      onBlur: onBlur\n    }, htmlProps);\n  }\n});\nvar unstable_FormRadio = createComponent({\n  as: \"input\",\n  memo: true,\n  useHook: unstable_useFormRadio\n});\nexport { unstable_FormRadio, unstable_useFormRadio };","map":null,"metadata":{},"sourceType":"module"}