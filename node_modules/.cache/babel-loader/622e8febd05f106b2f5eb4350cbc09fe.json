{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { useWarning } from 'reakit-warning';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport { useCreateElement } from 'reakit-system/useCreateElement';\nimport 'reakit-utils/getDocument';\nimport 'reakit-utils/getNextActiveElementOnBlur';\nimport 'reakit-utils/ensureFocus';\nimport '../__keys-e6a5cfbe.js';\nimport '../Disclosure/DisclosureContent.js';\nimport 'react-dom';\nimport '../Portal/Portal.js';\nimport 'reakit-utils/removeItemFromArray';\nimport '../MenuContext-6af6cf92.js';\nimport { useDialog } from '../Dialog/Dialog.js';\nimport 'body-scroll-lock';\nimport 'reakit-utils/useUpdateEffect';\nimport 'reakit-utils/closest';\nimport 'reakit-utils/contains';\nimport '../DialogBackdropContext-8775f78b.js';\nimport 'reakit-utils/isEmpty';\nimport '../__keys-ed7b48af.js';\nimport { P as POPOVER_KEYS } from '../__keys-26bb1730.js';\nvar usePopover = createHook({\n  name: \"Popover\",\n  compose: useDialog,\n  keys: POPOVER_KEYS,\n  useOptions: function useOptions(_ref) {\n    var _ref$modal = _ref.modal,\n        modal = _ref$modal === void 0 ? false : _ref$modal,\n        options = _objectWithoutPropertiesLoose(_ref, [\"modal\"]);\n\n    return _objectSpread2({\n      modal: modal\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlRef = _ref2.ref,\n        htmlStyle = _ref2.style,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"ref\", \"style\"]);\n\n    return _objectSpread2({\n      ref: useForkRef(options.unstable_popoverRef, htmlRef),\n      style: _objectSpread2(_objectSpread2({}, options.unstable_popoverStyles), htmlStyle)\n    }, htmlProps);\n  }\n});\nvar Popover = createComponent({\n  as: \"div\",\n  useHook: usePopover,\n  useCreateElement: function useCreateElement$1(type, props, children) {\n    process.env.NODE_ENV !== \"production\" ? useWarning(!props[\"aria-label\"] && !props[\"aria-labelledby\"], \"You should provide either `aria-label` or `aria-labelledby` props.\", \"See https://reakit.io/docs/popover\") : void 0;\n    return useCreateElement(type, props, children);\n  }\n});\nexport { Popover, usePopover };","map":null,"metadata":{},"sourceType":"module"}