{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport { useButton } from '../Button/Button.js';\nimport { getDocument } from 'reakit-utils/getDocument';\nimport { i as FORM_REMOVE_BUTTON_KEYS } from '../__keys-54ad6269.js';\nimport { g as getInputId } from '../getInputId-aa144169.js';\nimport { g as getPushButtonId } from '../getPushButtonId-9f434755.js';\nvar unstable_useFormRemoveButton = createHook({\n  name: \"FormRemoveButton\",\n  compose: useButton,\n  keys: FORM_REMOVE_BUTTON_KEYS,\n  useOptions: function useOptions(options, _ref) {\n    var name = _ref.name;\n    return _objectSpread2(_objectSpread2({}, options), {}, {\n      name: options.name || name\n    });\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlOnClick = _ref2.onClick,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"onClick\"]);\n\n    var onClickRef = useLiveRef(htmlOnClick);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current, _options$remove;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      (_options$remove = options.remove) === null || _options$remove === void 0 ? void 0 : _options$remove.call(options, options.name, options.index);\n      var inputId = getInputId(options.name, options.baseId);\n      if (!inputId) return;\n      var document = getDocument(event.currentTarget);\n      window.requestAnimationFrame(function () {\n        var selector = \"[id^=\\\"\" + inputId + \"-\\\"]\";\n        var inputs = document.querySelectorAll(selector);\n\n        if (inputs.length) {\n          var inputsArray = Array.from(inputs);\n          var nextIdx = inputsArray.reduce(function (final, input) {\n            var match = input.id.match(new RegExp(inputId + \"-([0-9]+)\"));\n            if (!match) return final;\n            var idx = match[1];\n\n            if (Number(idx) > final && options.index >= final) {\n              return Number(idx);\n            }\n\n            return final;\n          }, 0);\n          var nextSelector = \"[id^=\\\"\" + inputId + \"-\" + nextIdx + \"\\\"]\";\n          var input = document.querySelector(nextSelector);\n\n          if (input) {\n            input.focus();\n            return;\n          }\n        }\n\n        var pushButtonId = getPushButtonId(options.name, options.baseId);\n\n        if (pushButtonId) {\n          var pushButton = document.getElementById(pushButtonId);\n          pushButton === null || pushButton === void 0 ? void 0 : pushButton.focus();\n        }\n      });\n    }, [options.remove, options.name, options.index, options.baseId]);\n    return _objectSpread2({\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar unstable_FormRemoveButton = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: unstable_useFormRemoveButton\n});\nexport { unstable_FormRemoveButton, unstable_useFormRemoveButton };","map":null,"metadata":{},"sourceType":"module"}