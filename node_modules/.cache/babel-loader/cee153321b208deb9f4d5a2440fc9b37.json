{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useEffect, useCallback, createElement } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/canUseDOM';\nimport { getDocument } from 'reakit-utils/getDocument';\nimport '../__keys-e6a5cfbe.js';\nimport { useDisclosureContent } from '../Disclosure/DisclosureContent.js';\nimport 'react-dom';\nimport { Portal } from '../Portal/Portal.js';\nimport { T as TOOLTIP_KEYS } from '../__keys-d101cb3b.js';\nimport { g as globalState } from '../__globalState-300469f0.js';\n\nfunction globallyHideTooltipOnEscape(event) {\n  if (event.defaultPrevented) return;\n\n  if (event.key === \"Escape\") {\n    globalState.show(null);\n  }\n}\n\nvar useTooltip = createHook({\n  name: \"Tooltip\",\n  compose: useDisclosureContent,\n  keys: TOOLTIP_KEYS,\n  useOptions: function useOptions(_ref) {\n    var _ref$unstable_portal = _ref.unstable_portal,\n        unstable_portal = _ref$unstable_portal === void 0 ? true : _ref$unstable_portal,\n        options = _objectWithoutPropertiesLoose(_ref, [\"unstable_portal\"]);\n\n    return _objectSpread2({\n      unstable_portal: unstable_portal\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlRef = _ref2.ref,\n        htmlStyle = _ref2.style,\n        htmlWrapElement = _ref2.wrapElement,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"ref\", \"style\", \"wrapElement\"]);\n\n    useEffect(function () {\n      var _options$unstable_pop;\n\n      var document = getDocument((_options$unstable_pop = options.unstable_popoverRef) === null || _options$unstable_pop === void 0 ? void 0 : _options$unstable_pop.current);\n      document.addEventListener(\"keydown\", globallyHideTooltipOnEscape);\n    }, []);\n    var wrapElement = useCallback(function (element) {\n      if (options.unstable_portal) {\n        element =\n        /*#__PURE__*/\n        createElement(Portal, null, element);\n      }\n\n      if (htmlWrapElement) {\n        return htmlWrapElement(element);\n      }\n\n      return element;\n    }, [options.unstable_portal, htmlWrapElement]);\n    return _objectSpread2({\n      ref: useForkRef(options.unstable_popoverRef, htmlRef),\n      role: \"tooltip\",\n      style: _objectSpread2(_objectSpread2({}, options.unstable_popoverStyles), {}, {\n        pointerEvents: \"none\"\n      }, htmlStyle),\n      wrapElement: wrapElement\n    }, htmlProps);\n  }\n});\nvar Tooltip = createComponent({\n  as: \"div\",\n  memo: true,\n  useHook: useTooltip\n});\nexport { Tooltip, useTooltip };","map":null,"metadata":{},"sourceType":"module"}