{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useMemo, useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport 'reakit-utils/createOnKeyDown';\nimport 'reakit-utils/getDocument';\nimport '../getCurrentId-5aa9849e.js';\nimport '../__keys-6b7fda7f.js';\nimport '../Id/IdProvider.js';\nimport '../Id/Id.js';\nimport 'reakit-utils/isTextField';\nimport 'reakit-utils/ensureFocus';\nimport '../setTextFieldValue-78ab5d56.js';\nimport { useCompositeItem } from '../Composite/CompositeItem.js';\nimport { T as TAB_KEYS } from '../__keys-15b65aac.js';\n\nfunction useTabPanelId(options) {\n  return useMemo(function () {\n    var _options$panels, _options$panels$find;\n\n    return ((_options$panels = options.panels) === null || _options$panels === void 0 ? void 0 : (_options$panels$find = _options$panels.find(function (panel) {\n      return panel.groupId === options.id;\n    })) === null || _options$panels$find === void 0 ? void 0 : _options$panels$find.id) || undefined;\n  }, [options.panels, options.id]);\n}\n\nvar useTab = createHook({\n  name: \"Tab\",\n  compose: useCompositeItem,\n  keys: TAB_KEYS,\n  useOptions: function useOptions(_ref) {\n    var _ref$focusable = _ref.focusable,\n        focusable = _ref$focusable === void 0 ? true : _ref$focusable,\n        options = _objectWithoutPropertiesLoose(_ref, [\"focusable\"]);\n\n    return _objectSpread2({\n      focusable: focusable\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlOnClick = _ref2.onClick,\n        htmlOnFocus = _ref2.onFocus,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"onClick\", \"onFocus\"]);\n\n    var selected = options.selectedId === options.id;\n    var tabPanelId = useTabPanelId(options);\n    var onClickRef = useLiveRef(htmlOnClick);\n    var onFocusRef = useLiveRef(htmlOnFocus);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current, _options$select;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      if (options.disabled) return;\n      if (!options.id) return;\n      if (selected) return;\n      (_options$select = options.select) === null || _options$select === void 0 ? void 0 : _options$select.call(options, options.id);\n    }, [options.disabled, selected, options.select, options.id]);\n    var onFocus = useCallback(function (event) {\n      var _onFocusRef$current, _options$select2;\n\n      (_onFocusRef$current = onFocusRef.current) === null || _onFocusRef$current === void 0 ? void 0 : _onFocusRef$current.call(onFocusRef, event);\n      if (event.defaultPrevented) return;\n      if (options.disabled) return;\n      if (options.manual) return;\n      if (!options.id) return;\n      if (selected) return;\n      (_options$select2 = options.select) === null || _options$select2 === void 0 ? void 0 : _options$select2.call(options, options.id);\n    }, [options.id, options.disabled, options.manual, selected, options.select]);\n    return _objectSpread2({\n      role: \"tab\",\n      \"aria-selected\": selected,\n      \"aria-controls\": tabPanelId,\n      onClick: onClick,\n      onFocus: onFocus\n    }, htmlProps);\n  }\n});\nvar Tab = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useTab\n});\nexport { Tab, useTab };","map":null,"metadata":{},"sourceType":"module"}