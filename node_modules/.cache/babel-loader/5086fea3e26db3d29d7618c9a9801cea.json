{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport 'reakit-utils/removeIndexFromArray';\nimport 'reakit-utils/createEvent';\nimport { useCheckbox } from '../Checkbox/Checkbox.js';\nimport { a as FORM_CHECKBOX_KEYS } from '../__keys-54ad6269.js';\nimport { f as formatInputName, g as getInputId } from '../getInputId-aa144169.js';\nimport { g as getLabelId } from '../getLabelId-3db05e97.js';\nimport { unstable_getIn } from './utils/getIn.js';\nimport { s as shouldShowError, g as getMessageId } from '../shouldShowError-e8a86b53.js';\nvar unstable_useFormCheckbox = createHook({\n  name: \"FormCheckbox\",\n  compose: useCheckbox,\n  keys: FORM_CHECKBOX_KEYS,\n  useOptions: function useOptions(options, htmlProps) {\n    var name = options.name || htmlProps.name;\n    var value = typeof options.value !== \"undefined\" ? options.value : htmlProps.value;\n    var state = unstable_getIn(options.values, name);\n\n    var setState = function setState(val) {\n      return options.update(name, val);\n    };\n\n    return _objectSpread2(_objectSpread2({}, options), {}, {\n      state: state,\n      setState: setState,\n      name: name,\n      value: value\n    });\n  },\n  useProps: function useProps(options, _ref) {\n    var htmlOnBlur = _ref.onBlur,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onBlur\"]);\n\n    var onBlurRef = useLiveRef(htmlOnBlur);\n    var isBoolean = typeof options.value === \"undefined\";\n    var onBlur = useCallback(function (event) {\n      var _onBlurRef$current, _options$blur;\n\n      (_onBlurRef$current = onBlurRef.current) === null || _onBlurRef$current === void 0 ? void 0 : _onBlurRef$current.call(onBlurRef, event);\n      if (event.defaultPrevented) return;\n      (_options$blur = options.blur) === null || _options$blur === void 0 ? void 0 : _options$blur.call(options, options.name);\n    }, [options.blur, options.name]);\n    return _objectSpread2(_objectSpread2({\n      \"aria-invalid\": shouldShowError(options, options.name),\n      name: formatInputName(options.name),\n      onBlur: onBlur\n    }, isBoolean ? {\n      id: getInputId(options.name, options.baseId),\n      \"aria-describedby\": getMessageId(options.name, options.baseId),\n      \"aria-labelledby\": getLabelId(options.name, options.baseId)\n    } : {}), htmlProps);\n  }\n});\nvar unstable_FormCheckbox = createComponent({\n  as: \"input\",\n  memo: true,\n  useHook: unstable_useFormCheckbox\n});\nexport { unstable_FormCheckbox, unstable_useFormCheckbox };","map":null,"metadata":{},"sourceType":"module"}