{"ast":null,"code":"import { forwardRef as forwardRef$1, memo as memo$1 } from 'react';\nimport './SystemContext.js';\nimport { a as _objectWithoutPropertiesLoose, _ as _objectSpread2 } from './_rollupPluginBabelHelpers-0c84a174.js';\nimport { useCreateElement } from './useCreateElement.js';\nimport { splitProps } from 'reakit-utils/splitProps';\nimport { shallowEqual } from 'reakit-utils/shallowEqual';\n\nfunction forwardRef(component) {\n  return (\n    /*#__PURE__*/\n    forwardRef$1(component)\n  );\n}\n\nfunction memo(component, propsAreEqual) {\n  return (\n    /*#__PURE__*/\n    memo$1(component, propsAreEqual)\n  );\n}\n/**\n * Creates a React component.\n *\n * @example\n * import { createComponent } from \"reakit-system\";\n *\n * const A = createComponent({ as: \"a\" });\n *\n * @param options\n */\n\n\nfunction createComponent(_ref) {\n  var type = _ref.as,\n      useHook = _ref.useHook,\n      shouldMemo = _ref.memo,\n      _ref$propsAreEqual = _ref.propsAreEqual,\n      propsAreEqual = _ref$propsAreEqual === void 0 ? useHook === null || useHook === void 0 ? void 0 : useHook.unstable_propsAreEqual : _ref$propsAreEqual,\n      _ref$keys = _ref.keys,\n      keys = _ref$keys === void 0 ? (useHook === null || useHook === void 0 ? void 0 : useHook.__keys) || [] : _ref$keys,\n      _ref$useCreateElement = _ref.useCreateElement,\n      useCreateElement$1 = _ref$useCreateElement === void 0 ? useCreateElement : _ref$useCreateElement;\n\n  var Comp = function Comp(_ref2, ref) {\n    var _ref2$as = _ref2.as,\n        as = _ref2$as === void 0 ? type : _ref2$as,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"as\"]);\n\n    if (useHook) {\n      var _as$render;\n\n      var _splitProps = splitProps(props, keys),\n          _options = _splitProps[0],\n          htmlProps = _splitProps[1];\n\n      var _useHook = useHook(_options, _objectSpread2({\n        ref: ref\n      }, htmlProps)),\n          wrapElement = _useHook.wrapElement,\n          elementProps = _objectWithoutPropertiesLoose(_useHook, [\"wrapElement\"]); // @ts-ignore\n\n\n      var asKeys = ((_as$render = as.render) === null || _as$render === void 0 ? void 0 : _as$render.__keys) || as.__keys;\n      var asOptions = asKeys && splitProps(props, asKeys)[0];\n      var allProps = asOptions ? _objectSpread2(_objectSpread2({}, elementProps), asOptions) : elementProps;\n\n      var _element = useCreateElement$1(as, allProps);\n\n      if (wrapElement) {\n        return wrapElement(_element);\n      }\n\n      return _element;\n    }\n\n    return useCreateElement$1(as, _objectSpread2({\n      ref: ref\n    }, props));\n  };\n\n  if (process.env.NODE_ENV !== \"production\" && useHook) {\n    Comp.displayName = useHook.name.replace(/^(unstable_)?use/, \"\");\n  }\n\n  Comp = forwardRef(Comp);\n\n  if (shouldMemo) {\n    Comp = memo(Comp, propsAreEqual);\n  }\n\n  Comp.__keys = keys;\n  Comp.unstable_propsAreEqual = propsAreEqual || shallowEqual;\n  return Comp;\n}\n\nexport { createComponent };","map":null,"metadata":{},"sourceType":"module"}