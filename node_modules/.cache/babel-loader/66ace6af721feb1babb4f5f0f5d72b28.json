{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, DATA_LOADED } from \"../actions/action-types/cart-actions\";\nimport initState from \"../../state\";\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      var addedItem = state.items.find(function (item) {\n        return item.id === action.id;\n      }); //check if the action id exists in the addedItems\n\n      var existed_item = state.addedItems.find(function (item) {\n        return action.id === item.id;\n      });\n\n      if (existed_item) {\n        addedItem.quantity += 1;\n        return _objectSpread({}, state, {\n          total: state.total + addedItem.price\n        });\n      } else {\n        addedItem.quantity = 1; //calculating the total\n\n        var _newTotal = state.total + addedItem.price;\n\n        return _objectSpread({}, state, {\n          addedItems: _toConsumableArray(state.addedItems).concat([addedItem]),\n          total: _newTotal\n        });\n      }\n\n    default:\n      return _objectSpread({}, state, {\n        pending: false //items: action.payload,\n\n      });\n\n    case REMOVE_ITEM:\n      var itemToRemove = state.addedItems.find(function (item) {\n        return action.id === item.id;\n      });\n      var new_items = state.addedItems.filter(function (item) {\n        return action.id !== item.id;\n      }); //calculating the total\n\n      var newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n      console.log(itemToRemove);\n      return _objectSpread({}, state, {\n        addedItems: new_items,\n        total: newTotal\n      });\n\n    case ADD_QUANTITY:\n      var addedItem1 = state.items.find(function (item) {\n        return item.id === action.id;\n      });\n      addedItem.quantity += 1;\n      var newTotal1 = state.total + addedItem1.price;\n      return _objectSpread({}, state, {\n        total: newTotal1\n      });\n\n    case SUB_QUANTITY:\n      {\n        var _addedItem = state.items.find(function (item) {\n          return item.id === action.id;\n        }); //if the qt == 0 then it should be removed\n\n\n        if (_addedItem.quantity === 1) {\n          var _new_items = state.addedItems.filter(function (item) {\n            return item.id !== action.id;\n          });\n\n          var _newTotal2 = state.total - addedItem.price;\n\n          return _objectSpread({}, state, {\n            addedItems: _new_items,\n            total: _newTotal2\n          });\n        } else {\n          addedItem.quantity -= 1;\n\n          var _newTotal3 = state.total - addedItem.price;\n\n          return _objectSpread({}, state, {\n            total: _newTotal3\n          });\n        }\n      }\n\n    case ADD_SHIPPING:\n      return _objectSpread({}, state, {\n        total: state.total + 6\n      });\n\n    case DATA_LOADED:\n      console.log(\"dataLoaded reducer\");\n      return Object.assign({}, state, {\n        items: action.items\n      });\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:\\Preparation_2020\\ReachJS_Examples\\shopping-cart\\src\\components\\reducers\\cartReducer.js"],"names":["ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","DATA_LOADED","initState","cartReducer","state","action","type","addedItem","items","find","item","id","existed_item","addedItems","quantity","total","price","newTotal","pending","itemToRemove","new_items","filter","console","log","addedItem1","newTotal1","Object","assign"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  REMOVE_ITEM,\r\n  SUB_QUANTITY,\r\n  ADD_QUANTITY,\r\n  ADD_SHIPPING,\r\n  DATA_LOADED,\r\n} from \"../actions/action-types/cart-actions\";\r\nimport initState from \"../../state\";\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      let addedItem = state.items.find((item) => item.id === action.id);\r\n      //check if the action id exists in the addedItems\r\n      let existed_item = state.addedItems.find((item) => action.id === item.id);\r\n      if (existed_item) {\r\n        addedItem.quantity += 1;\r\n        return {\r\n          ...state,\r\n          total: state.total + addedItem.price,\r\n        };\r\n      } else {\r\n        addedItem.quantity = 1;\r\n        //calculating the total\r\n        let newTotal = state.total + addedItem.price;\r\n\r\n        return {\r\n          ...state,\r\n          addedItems: [...state.addedItems, addedItem],\r\n          total: newTotal,\r\n        };\r\n      }\r\n    default:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        //items: action.payload,\r\n      };\r\n\r\n    case REMOVE_ITEM:\r\n      let itemToRemove = state.addedItems.find((item) => action.id === item.id);\r\n      let new_items = state.addedItems.filter((item) => action.id !== item.id);\r\n\r\n      //calculating the total\r\n      let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\r\n      console.log(itemToRemove);\r\n      return {\r\n        ...state,\r\n        addedItems: new_items,\r\n        total: newTotal,\r\n      };\r\n    case ADD_QUANTITY:\r\n      let addedItem1 = state.items.find((item) => item.id === action.id);\r\n      addedItem.quantity += 1;\r\n      let newTotal1 = state.total + addedItem1.price;\r\n      return {\r\n        ...state,\r\n        total: newTotal1,\r\n      };\r\n    case SUB_QUANTITY: {\r\n      let addedItem1 = state.items.find((item) => item.id === action.id);\r\n      //if the qt == 0 then it should be removed\r\n      if (addedItem1.quantity === 1) {\r\n        let new_items = state.addedItems.filter(\r\n          (item) => item.id !== action.id\r\n        );\r\n        let newTotal = state.total - addedItem.price;\r\n        return {\r\n          ...state,\r\n          addedItems: new_items,\r\n          total: newTotal,\r\n        };\r\n      } else {\r\n        addedItem.quantity -= 1;\r\n        let newTotal = state.total - addedItem.price;\r\n        return {\r\n          ...state,\r\n          total: newTotal,\r\n        };\r\n      }\r\n    }\r\n    case ADD_SHIPPING:\r\n      return {\r\n        ...state,\r\n        total: state.total + 6,\r\n      };\r\n    case DATA_LOADED:\r\n      console.log(\"dataLoaded reducer\");\r\n      return Object.assign({}, state, {\r\n        items: action.items,\r\n      });\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}