{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useRef } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { f as findEnabledItemById } from '../findEnabledItemById-8ddca752.js';\nimport { a as COMPOSITE_GROUP_KEYS } from '../__keys-6b7fda7f.js';\nimport { useGroup } from '../Group/Group.js';\nimport '../Id/IdProvider.js';\nimport { unstable_useId } from '../Id/Id.js';\nvar useCompositeGroup = createHook({\n  name: \"CompositeGroup\",\n  compose: [useGroup, unstable_useId],\n  keys: COMPOSITE_GROUP_KEYS,\n  propsAreEqual: function propsAreEqual(prev, next) {\n    if (!next.id || prev.id !== next.id) {\n      return useGroup.unstable_propsAreEqual(prev, next);\n    }\n\n    var prevCurrentId = prev.currentId,\n        prevMoves = prev.unstable_moves,\n        prevProps = _objectWithoutPropertiesLoose(prev, [\"currentId\", \"unstable_moves\"]);\n\n    var nextCurrentId = next.currentId,\n        nextMoves = next.unstable_moves,\n        nextProps = _objectWithoutPropertiesLoose(next, [\"currentId\", \"unstable_moves\"]);\n\n    if (prev.items && next.items) {\n      var prevCurrentItem = findEnabledItemById(prev.items, prevCurrentId);\n      var nextCurrentItem = findEnabledItemById(next.items, nextCurrentId);\n      var prevGroupId = prevCurrentItem === null || prevCurrentItem === void 0 ? void 0 : prevCurrentItem.groupId;\n      var nextGroupId = nextCurrentItem === null || nextCurrentItem === void 0 ? void 0 : nextCurrentItem.groupId;\n\n      if (next.id === nextGroupId || next.id === prevGroupId) {\n        return false;\n      }\n    }\n\n    return useGroup.unstable_propsAreEqual(prevProps, nextProps);\n  },\n  useProps: function useProps(options, _ref) {\n    var htmlRef = _ref.ref,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\"]);\n\n    var ref = useRef(null);\n    var id = options.id; // We need this to be called before CompositeItems' register\n\n    useIsomorphicEffect(function () {\n      var _options$registerGrou;\n\n      if (!id) return undefined;\n      (_options$registerGrou = options.registerGroup) === null || _options$registerGrou === void 0 ? void 0 : _options$registerGrou.call(options, {\n        id: id,\n        ref: ref\n      });\n      return function () {\n        var _options$unregisterGr;\n\n        (_options$unregisterGr = options.unregisterGroup) === null || _options$unregisterGr === void 0 ? void 0 : _options$unregisterGr.call(options, id);\n      };\n    }, [id, options.registerGroup, options.unregisterGroup]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef)\n    }, htmlProps);\n  }\n});\nvar CompositeGroup = createComponent({\n  as: \"div\",\n  useHook: useCompositeGroup\n});\nexport { CompositeGroup, useCompositeGroup };","map":null,"metadata":{},"sourceType":"module"}