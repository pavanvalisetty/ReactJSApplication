{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport var FETCH_CHARACTER_REQUEST = \"FETCH_CHARACTER_REQUEST\";\nexport var FETCH_CHARACTER_SUCCESS = \"FETCH_CHARACTER_SUCCESS\";\nexport var FETCH_CHARACTER_ERROR = \"FETCH_CHARACTER_ERROR\";\nexport var fetchCharacter = function fetchCharacter(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch({\n                  type: FETCH_CHARACTER_REQUEST,\n                  id: id\n                });\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.get(\"https://rickandmortyapi.com/api/character/\".concat(id));\n\n              case 5:\n                response = _context.sent;\n                return _context.abrupt(\"return\", dispatch({\n                  type: FETCH_CHARACTER_SUCCESS,\n                  data: response.data,\n                  id: id\n                }));\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", dispatch({\n                  type: FETCH_CHARACTER_ERROR,\n                  err: _context.t0,\n                  id: id\n                }));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var FETCH_CHARACTERS_REQUEST = \"FETCH_CHARACTERS_REQUEST\";\nexport var FETCH_CHARACTERS_SUCCESS = \"FETCH_CHARACTERS_SUCCESS\";\nexport var FETCH_CHARACTERS_ERROR = \"FETCH_CHARACTERS_ERROR\";\nexport var fetchCharacters = function fetchCharacters() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch({\n                  type: FETCH_CHARACTERS_REQUEST\n                });\n\n              case 2:\n                _context2.prev = 2;\n                _context2.next = 5;\n                return axios.get(\"https://rickandmortyapi.com/api/character\");\n\n              case 5:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", dispatch({\n                  type: FETCH_CHARACTERS_SUCCESS,\n                  data: response.data\n                }));\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                return _context2.abrupt(\"return\", dispatch({\n                  type: FETCH_CHARACTERS_ERROR,\n                  err: _context2.t0\n                }));\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["D:\\Preparation_2020\\ReachJS_Examples\\shopping-cart\\src\\components\\actions\\characters.js"],"names":["axios","FETCH_CHARACTER_REQUEST","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_ERROR","fetchCharacter","id","dispatch","type","get","response","data","err","FETCH_CHARACTERS_REQUEST","FETCH_CHARACTERS_SUCCESS","FETCH_CHARACTERS_ERROR","fetchCharacters"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAQ,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC9BA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEN,uBAAR;AAAiCI,kBAAAA,EAAE,EAAFA;AAAjC,iBAAD,CADsB;;AAAA;AAAA;AAAA;AAAA,uBAGXL,KAAK,CAACQ,GAAN,qDACwBH,EADxB,EAHW;;AAAA;AAG5BI,gBAAAA,QAH4B;AAAA,iDAM3BH,QAAQ,CAAC;AACdC,kBAAAA,IAAI,EAAEL,uBADQ;AAEdQ,kBAAAA,IAAI,EAAED,QAAQ,CAACC,IAFD;AAGdL,kBAAAA,EAAE,EAAFA;AAHc,iBAAD,CANmB;;AAAA;AAAA;AAAA;AAAA,iDAY3BC,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEJ,qBAAR;AAA+BQ,kBAAAA,GAAG,aAAlC;AAAoCN,kBAAAA,EAAE,EAAFA;AAApC,iBAAD,CAZmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAgBP,OAAO,IAAMO,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAOT,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC7BA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEK;AAAR,iBAAD,CADqB;;AAAA;AAAA;AAAA;AAAA,uBAGVZ,KAAK,CAACQ,GAAN,CACrB,2CADqB,CAHU;;AAAA;AAG3BC,gBAAAA,QAH2B;AAAA,kDAM1BH,QAAQ,CAAC;AACdC,kBAAAA,IAAI,EAAEM,wBADQ;AAEdH,kBAAAA,IAAI,EAAED,QAAQ,CAACC;AAFD,iBAAD,CANkB;;AAAA;AAAA;AAAA;AAAA,kDAW1BJ,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEO,sBAAR;AAAgCH,kBAAAA,GAAG;AAAnC,iBAAD,CAXkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const FETCH_CHARACTER_REQUEST = \"FETCH_CHARACTER_REQUEST\";\r\nexport const FETCH_CHARACTER_SUCCESS = \"FETCH_CHARACTER_SUCCESS\";\r\nexport const FETCH_CHARACTER_ERROR = \"FETCH_CHARACTER_ERROR\";\r\n\r\nexport const fetchCharacter = (id) => async (dispatch) => {\r\n  await dispatch({ type: FETCH_CHARACTER_REQUEST, id });\r\n  try {\r\n    const response = await axios.get(\r\n      `https://rickandmortyapi.com/api/character/${id}`\r\n    );\r\n    return dispatch({\r\n      type: FETCH_CHARACTER_SUCCESS,\r\n      data: response.data,\r\n      id,\r\n    });\r\n  } catch (err) {\r\n    return dispatch({ type: FETCH_CHARACTER_ERROR, err, id });\r\n  }\r\n};\r\n\r\nexport const FETCH_CHARACTERS_REQUEST = \"FETCH_CHARACTERS_REQUEST\";\r\nexport const FETCH_CHARACTERS_SUCCESS = \"FETCH_CHARACTERS_SUCCESS\";\r\nexport const FETCH_CHARACTERS_ERROR = \"FETCH_CHARACTERS_ERROR\";\r\n\r\nexport const fetchCharacters = () => async (dispatch) => {\r\n  await dispatch({ type: FETCH_CHARACTERS_REQUEST });\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://rickandmortyapi.com/api/character\"\r\n    );\r\n    return dispatch({\r\n      type: FETCH_CHARACTERS_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    return dispatch({ type: FETCH_CHARACTERS_ERROR, err });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}