{"ast":null,"code":"import { createContext, useContext, useState, useCallback, useEffect, useMemo, createElement } from 'react';\nimport { removeItemFromArray } from 'reakit-utils/removeItemFromArray';\nvar MenuContext =\n/*#__PURE__*/\ncreateContext(null);\n\nfunction useMenuContext(menuRef, role, options) {\n  var orphan = \"unstable_orphan\" in options && options.unstable_orphan;\n  var parent = useContext(MenuContext);\n\n  var _React$useState = useState([]),\n      children = _React$useState[0],\n      setChildren = _React$useState[1];\n\n  var _ref = parent || {},\n      addChildToParent = _ref.addChild,\n      removeChildFromParent = _ref.removeChild;\n\n  var addChild = useCallback(function (ref) {\n    return setChildren(function (refs) {\n      return [].concat(refs, [ref]);\n    });\n  }, []);\n  var removeChild = useCallback(function (ref) {\n    return setChildren(function (refs) {\n      return removeItemFromArray(refs, ref);\n    });\n  }, []); // If it's a nested menu, add it to parent\n\n  useEffect(function () {\n    if (!addChildToParent || orphan) return undefined;\n    addChildToParent(menuRef);\n    return function () {\n      removeChildFromParent === null || removeChildFromParent === void 0 ? void 0 : removeChildFromParent(menuRef);\n    };\n  }, [menuRef, addChildToParent, removeChildFromParent, orphan]);\n  var providerValue = useMemo(function () {\n    return {\n      orientation: options.orientation,\n      next: options.next,\n      previous: options.previous,\n      ref: menuRef,\n      role: role,\n      parent: parent,\n      children: children,\n      addChild: addChild,\n      removeChild: removeChild\n    };\n  }, [options.orientation, options.next, options.previous, menuRef, role, parent, children, addChild, removeChild]);\n  var wrapElement = useCallback(function (element) {\n    return (\n      /*#__PURE__*/\n      createElement(MenuContext.Provider, {\n        value: providerValue\n      }, element)\n    );\n  }, [providerValue]);\n  return wrapElement;\n}\n\nexport { MenuContext as M, useMenuContext as u };","map":null,"metadata":{},"sourceType":"module"}