{"ast":null,"code":"import './getDocument.js';\nimport './getActiveElement.js';\nimport { hasFocus } from './hasFocus.js';\n/**\n * Ensures `element` will receive focus if it's not already.\n *\n * @example\n * import { ensureFocus } from \"reakit-utils\";\n *\n * ensureFocus(document.activeElement); // does nothing\n *\n * const element = document.querySelector(\"input\");\n *\n * ensureFocus(element); // focuses element\n * ensureFocus(element, { preventScroll: true }); // focuses element preventing scroll jump\n *\n * function isActive(el) {\n *   return el.dataset.active === \"true\";\n * }\n *\n * ensureFocus(document.querySelector(\"[data-active='true']\"), { isActive }); // does nothing\n *\n * @returns {number} `requestAnimationFrame` call ID so it can be passed to `cancelAnimationFrame` if needed.\n */\n\nfunction ensureFocus(element, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      preventScroll = _ref.preventScroll,\n      _ref$isActive = _ref.isActive,\n      isActive = _ref$isActive === void 0 ? hasFocus : _ref$isActive;\n\n  if (isActive(element)) return -1;\n  element.focus({\n    preventScroll: preventScroll\n  });\n  if (isActive(element)) return -1;\n  return requestAnimationFrame(function () {\n    element.focus({\n      preventScroll: preventScroll\n    });\n  });\n}\n\nexport { ensureFocus };","map":null,"metadata":{},"sourceType":"module"}