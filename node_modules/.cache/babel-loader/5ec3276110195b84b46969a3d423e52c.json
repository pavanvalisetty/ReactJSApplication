{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useBox } from '../Box/Box.js';\nimport { useRef, useCallback } from 'react';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport { isSelfTarget } from 'reakit-utils/isSelfTarget';\nimport { getDocument } from 'reakit-utils/getDocument';\nimport { c as COMPOSITE_ITEM_WIDGET_KEYS } from '../__keys-6b7fda7f.js';\nimport { isTextField } from 'reakit-utils/isTextField';\nimport { s as setTextFieldValue } from '../setTextFieldValue-78ab5d56.js';\n\nfunction focusCurrentItem(widget, currentId) {\n  if (currentId) {\n    var _getDocument$getEleme;\n\n    (_getDocument$getEleme = getDocument(widget).getElementById(currentId)) === null || _getDocument$getEleme === void 0 ? void 0 : _getDocument$getEleme.focus();\n  }\n}\n\nfunction getTextFieldValue(element) {\n  return element.value;\n}\n\nvar unstable_useCompositeItemWidget = createHook({\n  name: \"CompositeItemWidget\",\n  compose: useBox,\n  keys: COMPOSITE_ITEM_WIDGET_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlOnFocus = _ref.onFocus,\n        htmlOnBlur = _ref.onBlur,\n        htmlOnKeyDown = _ref.onKeyDown,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onFocus\", \"onBlur\", \"onKeyDown\"]);\n\n    var initialValue = useRef(\"\");\n    var onFocusRef = useLiveRef(htmlOnFocus);\n    var onBlurRef = useLiveRef(htmlOnBlur);\n    var onKeyDownRef = useLiveRef(htmlOnKeyDown);\n    var onFocus = useCallback(function (event) {\n      var _onFocusRef$current, _options$unstable_set;\n\n      (_onFocusRef$current = onFocusRef.current) === null || _onFocusRef$current === void 0 ? void 0 : _onFocusRef$current.call(onFocusRef, event);\n      (_options$unstable_set = options.unstable_setHasActiveWidget) === null || _options$unstable_set === void 0 ? void 0 : _options$unstable_set.call(options, true);\n\n      if (isTextField(event.currentTarget)) {\n        initialValue.current = getTextFieldValue(event.currentTarget);\n      }\n    }, [options.unstable_setHasActiveWidget]);\n    var onBlur = useCallback(function (event) {\n      var _onBlurRef$current, _options$unstable_set2;\n\n      (_onBlurRef$current = onBlurRef.current) === null || _onBlurRef$current === void 0 ? void 0 : _onBlurRef$current.call(onBlurRef, event);\n      (_options$unstable_set2 = options.unstable_setHasActiveWidget) === null || _options$unstable_set2 === void 0 ? void 0 : _options$unstable_set2.call(options, false);\n    }, [options.unstable_setHasActiveWidget]);\n    var onKeyDown = useCallback(function (event) {\n      var _onKeyDownRef$current;\n\n      (_onKeyDownRef$current = onKeyDownRef.current) === null || _onKeyDownRef$current === void 0 ? void 0 : _onKeyDownRef$current.call(onKeyDownRef, event);\n      if (event.defaultPrevented) return;\n      if (!isSelfTarget(event)) return;\n      if (event.nativeEvent.isComposing) return;\n      var element = event.currentTarget;\n\n      if (event.key === \"Enter\") {\n        if (isTextField(element)) {\n          var isMultilineTextField = element.tagName === \"TEXTAREA\"; // Make sure we can create new lines using Shift+Enter\n\n          if (isMultilineTextField && event.shiftKey) return; // Make sure it'll not trigger a click on the parent button\n\n          event.preventDefault();\n          focusCurrentItem(element, options.currentId);\n        }\n      } else if (event.key === \"Escape\") {\n        focusCurrentItem(element, options.currentId);\n\n        if (isTextField(element)) {\n          setTextFieldValue(element, initialValue.current);\n        }\n      }\n    }, [options.currentId]);\n    return _objectSpread2({\n      tabIndex: options.unstable_hasActiveWidget ? 0 : -1,\n      \"data-composite-item-widget\": true,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onKeyDown: onKeyDown\n    }, htmlProps);\n  }\n});\nvar unstable_CompositeItemWidget = createComponent({\n  as: \"div\",\n  useHook: unstable_useCompositeItemWidget\n});\nexport { unstable_CompositeItemWidget, unstable_useCompositeItemWidget };","map":null,"metadata":{},"sourceType":"module"}