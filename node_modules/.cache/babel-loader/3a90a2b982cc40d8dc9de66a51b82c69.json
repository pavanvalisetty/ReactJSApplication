{"ast":null,"code":"import { flatten } from 'reakit-utils/flatten';\n/**\n * Logs `messages` to the console using `console.warn` based on a `condition`.\n *\n * @example\n * import { warning } from \"reakit-warning\";\n *\n * warning(true, \"a\", \"b\"); // console.warn(\"a\", \"\\n\", \"b\")\n * warning(false, \"a\", \"b\"); // does nothing\n */\n\nfunction warning(condition) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _console;\n\n    if (!condition) return;\n\n    for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      messages[_key - 1] = arguments[_key];\n    }\n\n    var warns = flatten(messages.map(function (message) {\n      return [message, \"\\n\"];\n    })); // eslint-disable-next-line no-console\n\n    (_console = console).warn.apply(_console, warns.slice(0, -1)); // Throwing an error and catching it immediately to improve debugging\n    // A consumer can use 'pause on caught exceptions'\n    // https://github.com/facebook/react/issues/4216\n\n\n    try {\n      throw Error(warns.join(\"\"));\n    } catch (x) {// do nothing\n    }\n  }\n}\n\nexport { warning };","map":null,"metadata":{},"sourceType":"module"}