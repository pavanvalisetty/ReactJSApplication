{"ast":null,"code":"import _classCallCheck from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Preparation_2020\\\\ReachJS_Examples\\\\shopping-cart\\\\src\\\\containers\\\\CharacterList.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Heading, Paragraph } from \"reakit\";\nimport { connect } from \"react-redux\";\nimport { fetchCharacters } from \".\";\nimport CharacterListItem from \"../components/CharacterListItem\";\n\nvar CharacterList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CharacterList, _Component);\n\n  function CharacterList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CharacterList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CharacterList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      var fetchCharacters = _this.props.fetchCharacters;\n      fetchCharacters();\n    };\n\n    _this.render = function () {\n      var _this$props = _this.props,\n          characters = _this$props.characters,\n          err = _this$props.err,\n          isLoading = _this$props.isLoading;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Rick & Morty Characters\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), isLoading && !characters && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Loading...\"), characters && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, characters.results.length === 0 && React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"No characters\"), characters.results.map(function (character) {\n        return React.createElement(CharacterListItem, {\n          key: character.id,\n          character: character,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      })), err && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"An error occurred. Message: \", err.message));\n    };\n\n    return _this;\n  }\n\n  return CharacterList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.data,\n    err: state.characters.err,\n    isLoading: state.characters.isLoading\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchCharacters: fetchCharacters\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterList);","map":{"version":3,"sources":["D:\\Preparation_2020\\ReachJS_Examples\\shopping-cart\\src\\containers\\CharacterList.js"],"names":["React","Component","Fragment","Heading","Paragraph","connect","fetchCharacters","CharacterListItem","CharacterList","componentDidMount","props","render","characters","err","isLoading","results","length","map","character","id","message","mapStateToProps","state","data","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,QAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,GAAhC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;IAEMC,a;;;;;;;;;;;;;;;;;;UACJC,iB,GAAoB,YAAM;AAAA,UAChBH,eADgB,GACI,MAAKI,KADT,CAChBJ,eADgB;AAExBA,MAAAA,eAAe;AAChB,K;;UAEDK,M,GAAS,YAAM;AAAA,wBAC0B,MAAKD,KAD/B;AAAA,UACLE,UADK,eACLA,UADK;AAAA,UACOC,GADP,eACOA,GADP;AAAA,UACYC,SADZ,eACYA,SADZ;AAEb,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGGA,SAAS,IAAI,CAACF,UAAd,IAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAH/B,EAIGA,UAAU,IACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,UAAU,CAACG,OAAX,CAAmBC,MAAnB,KAA8B,CAA9B,IACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAIGJ,UAAU,CAACG,OAAX,CAAmBE,GAAnB,CAAuB,UAACC,SAAD;AAAA,eACtB,oBAAC,iBAAD;AAAmB,UAAA,GAAG,EAAEA,SAAS,CAACC,EAAlC;AAAsC,UAAA,SAAS,EAAED,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB;AAAA,OAAvB,CAJH,CALJ,EAcGL,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAkCA,GAAG,CAACO,OAAtC,CAdV,CADF;AAkBD,K;;;;;;EA1ByBnB,S;;AA6B5B,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCV,IAAAA,UAAU,EAAEU,KAAK,CAACV,UAAN,CAAiBW,IADK;AAElCV,IAAAA,GAAG,EAAES,KAAK,CAACV,UAAN,CAAiBC,GAFY;AAGlCC,IAAAA,SAAS,EAAEQ,KAAK,CAACV,UAAN,CAAiBE;AAHM,GAAZ;AAAA,CAAxB;;AAKA,IAAMU,kBAAkB,GAAG;AACzBlB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CACpBgB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhB,aAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Heading, Paragraph } from \"reakit\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchCharacters } from \".\";\r\nimport CharacterListItem from \"../components/CharacterListItem\";\r\n\r\nclass CharacterList extends Component {\r\n  componentDidMount = () => {\r\n    const { fetchCharacters } = this.props;\r\n    fetchCharacters();\r\n  };\r\n\r\n  render = () => {\r\n    const { characters, err, isLoading } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Heading>Rick & Morty Characters</Heading>\r\n        <hr />\r\n        {isLoading && !characters && <p>Loading...</p>}\r\n        {characters && (\r\n          <Fragment>\r\n            {characters.results.length === 0 && (\r\n              <Paragraph>No characters</Paragraph>\r\n            )}\r\n            {characters.results.map((character) => (\r\n              <CharacterListItem key={character.id} character={character} />\r\n            ))}\r\n          </Fragment>\r\n        )}\r\n        {err && <div>An error occurred. Message: {err.message}</div>}\r\n      </Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.data,\r\n  err: state.characters.err,\r\n  isLoading: state.characters.isLoading,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchCharacters,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterList);\r\n"]},"metadata":{},"sourceType":"module"}