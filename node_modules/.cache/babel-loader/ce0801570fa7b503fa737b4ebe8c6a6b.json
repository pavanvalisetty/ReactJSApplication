{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport { useButton } from '../Button/Button.js';\nimport { getDocument } from 'reakit-utils/getDocument';\nimport { j as FORM_SUBMIT_BUTTON_KEYS } from '../__keys-54ad6269.js';\n\nfunction getFirstInvalidInput(baseId, target) {\n  var document = getDocument(target);\n  var selector = \"[aria-invalid=true][id^=\" + baseId + \"]\";\n  return document.querySelector(selector);\n}\n\nvar unstable_useFormSubmitButton = createHook({\n  name: \"FormSubmitButton\",\n  compose: useButton,\n  keys: FORM_SUBMIT_BUTTON_KEYS,\n  useOptions: function useOptions(options) {\n    return _objectSpread2({\n      disabled: options.submitting\n    }, options);\n  },\n  useProps: function useProps(options, _ref) {\n    var htmlOnClick = _ref.onClick,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onClick\"]);\n\n    var onClickRef = useLiveRef(htmlOnClick);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      var element = event.currentTarget;\n      window.requestAnimationFrame(function () {\n        var input = getFirstInvalidInput(options.baseId, element);\n        input === null || input === void 0 ? void 0 : input.focus();\n\n        if (input && \"select\" in input) {\n          input.select();\n        }\n      });\n    }, [options.baseId]);\n    return _objectSpread2({\n      type: \"submit\",\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar unstable_FormSubmitButton = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: unstable_useFormSubmitButton\n});\nexport { unstable_FormSubmitButton, unstable_useFormSubmitButton };","map":null,"metadata":{},"sourceType":"module"}