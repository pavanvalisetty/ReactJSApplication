{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport { useButton } from '../Button/Button.js';\nimport { getDocument } from 'reakit-utils/getDocument';\nimport { f as FORM_PUSH_BUTTON_KEYS } from '../__keys-54ad6269.js';\nimport { g as getInputId, f as formatInputName } from '../getInputId-aa144169.js';\nimport { unstable_getIn } from './utils/getIn.js';\nimport { g as getPushButtonId } from '../getPushButtonId-9f434755.js';\nvar unstable_useFormPushButton = createHook({\n  name: \"FormPushButton\",\n  compose: useButton,\n  keys: FORM_PUSH_BUTTON_KEYS,\n  useOptions: function useOptions(options, _ref) {\n    var _options$value;\n\n    var name = _ref.name,\n        value = _ref.value;\n    return _objectSpread2(_objectSpread2({}, options), {}, {\n      name: options.name || name,\n      value: (_options$value = options.value) != null ? _options$value : value\n    });\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlOnClick = _ref2.onClick,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"onClick\"]);\n\n    var onClickRef = useLiveRef(htmlOnClick);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current, _options$push;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      (_options$push = options.push) === null || _options$push === void 0 ? void 0 : _options$push.call(options, options.name, options.value);\n\n      var _unstable_getIn = unstable_getIn(options.values, options.name, []),\n          length = _unstable_getIn.length;\n\n      var inputId = getInputId(formatInputName(options.name, \"-\") + \"-\" + length, options.baseId);\n      if (!inputId) return;\n      var element = event.currentTarget;\n      window.requestAnimationFrame(function () {\n        var selector = \"[id^=\\\"\" + inputId + \"\\\"]\";\n        var document = getDocument(element);\n        var input = document.querySelector(selector);\n        input === null || input === void 0 ? void 0 : input.focus();\n      });\n    }, [options.push, options.name, options.value, options.values, options.baseId]);\n    return _objectSpread2({\n      id: getPushButtonId(options.name, options.baseId),\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar unstable_FormPushButton = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: unstable_useFormPushButton\n});\nexport { unstable_FormPushButton, unstable_useFormPushButton };","map":null,"metadata":{},"sourceType":"module"}