{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { useSealedState } from 'reakit-utils/useSealedState';\nimport '../Id/IdProvider.js';\nimport { unstable_useIdState } from '../Id/IdState.js';\n\nfunction useLastValue(value) {\n  var lastValue = useRef(null);\n  useIsomorphicEffect(function () {\n    lastValue.current = value;\n  }, [value]);\n  return lastValue;\n}\n\nfunction useDisclosureState(initialState) {\n  if (initialState === void 0) {\n    initialState = {};\n  }\n\n  var _useSealedState = useSealedState(initialState),\n      _useSealedState$visib = _useSealedState.visible,\n      initialVisible = _useSealedState$visib === void 0 ? false : _useSealedState$visib,\n      _useSealedState$anima = _useSealedState.animated,\n      initialAnimated = _useSealedState$anima === void 0 ? false : _useSealedState$anima,\n      sealed = _objectWithoutPropertiesLoose(_useSealedState, [\"visible\", \"animated\"]);\n\n  var id = unstable_useIdState(sealed);\n\n  var _React$useState = useState(initialVisible),\n      visible = _React$useState[0],\n      setVisible = _React$useState[1];\n\n  var _React$useState2 = useState(initialAnimated),\n      animated = _React$useState2[0],\n      setAnimated = _React$useState2[1];\n\n  var _React$useState3 = useState(false),\n      animating = _React$useState3[0],\n      setAnimating = _React$useState3[1];\n\n  var lastVisible = useLastValue(visible);\n  var visibleHasChanged = lastVisible.current != null && lastVisible.current !== visible;\n\n  if (animated && !animating && visibleHasChanged) {\n    // Sets animating to true when when visible is updated\n    setAnimating(true);\n  }\n\n  useEffect(function () {\n    if (typeof animated === \"number\" && animating) {\n      setTimeout(function () {\n        return setAnimating(false);\n      }, animated);\n    }\n  }, [animated, animating]);\n  var show = useCallback(function () {\n    return setVisible(true);\n  }, []);\n  var hide = useCallback(function () {\n    return setVisible(false);\n  }, []);\n  var toggle = useCallback(function () {\n    return setVisible(function (v) {\n      return !v;\n    });\n  }, []);\n  var stopAnimation = useCallback(function () {\n    return setAnimating(false);\n  }, []);\n  return _objectSpread2(_objectSpread2({}, id), {}, {\n    visible: visible,\n    animated: animated,\n    animating: animating,\n    show: show,\n    hide: hide,\n    toggle: toggle,\n    setVisible: setVisible,\n    setAnimated: setAnimated,\n    stopAnimation: stopAnimation\n  });\n}\n\nexport { useDisclosureState };","map":null,"metadata":{},"sourceType":"module"}