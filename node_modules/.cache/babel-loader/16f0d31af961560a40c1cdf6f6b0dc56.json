{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useContext, useMemo } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport { useWarning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport { useCreateElement } from 'reakit-system/useCreateElement';\nimport { createOnKeyDown } from 'reakit-utils/createOnKeyDown';\nimport 'reakit-utils/getDocument';\nimport 'reakit-utils/fireBlurEvent';\nimport 'reakit-utils/fireKeyboardEvent';\nimport 'reakit-utils/getNextActiveElementOnBlur';\nimport '../reverse-30eaa122.js';\nimport '../getCurrentId-5aa9849e.js';\nimport '../findEnabledItemById-8ddca752.js';\nimport '../__keys-6b7fda7f.js';\nimport '../Composite/Composite.js';\nimport 'reakit-utils/ensureFocus';\nimport '../__keys-e6a5cfbe.js';\nimport '../Disclosure/DisclosureContent.js';\nimport 'react-dom';\nimport '../Portal/Portal.js';\nimport 'reakit-utils/removeItemFromArray';\nimport { M as MenuContext } from '../MenuContext-6af6cf92.js';\nimport '../Dialog/Dialog.js';\nimport 'body-scroll-lock';\nimport 'reakit-utils/useUpdateEffect';\nimport 'reakit-utils/closest';\nimport { contains } from 'reakit-utils/contains';\nimport '../DialogBackdropContext-8775f78b.js';\nimport 'reakit-utils/isEmpty';\nimport '../__keys-ed7b48af.js';\nimport '../__keys-26bb1730.js';\nimport { usePopover } from '../Popover/Popover.js';\nimport { useMenuBar } from './MenuBar.js';\nimport { M as MENU_KEYS } from '../__keys-41337ef1.js';\n\nfunction usePlacementDir(placement) {\n  return useMemo(function () {\n    var _placement$split;\n\n    return placement === null || placement === void 0 ? void 0 : (_placement$split = placement.split(\"-\")) === null || _placement$split === void 0 ? void 0 : _placement$split[0];\n  }, [placement]);\n}\n\nvar useMenu = createHook({\n  name: \"Menu\",\n  compose: [useMenuBar, usePopover],\n  keys: MENU_KEYS,\n  useOptions: function useOptions(options) {\n    var parent = useContext(MenuContext);\n    var parentIsMenuBar = (parent === null || parent === void 0 ? void 0 : parent.role) === \"menubar\";\n    return _objectSpread2(_objectSpread2({\n      unstable_autoFocusOnHide: !parentIsMenuBar,\n      modal: false\n    }, options), {}, {\n      // will be handled by MenuButton\n      unstable_autoFocusOnShow: false,\n      // will be handled differently from usePopover/useDialog\n      hideOnEsc: false\n    });\n  },\n  useProps: function useProps(options, _ref) {\n    var htmlOnKeyDown = _ref.onKeyDown,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onKeyDown\"]);\n\n    var onKeyDownRef = useLiveRef(htmlOnKeyDown);\n    var parent = useContext(MenuContext);\n    var hasParent = !!parent;\n    var ancestorMenuBar = parent;\n\n    while (ancestorMenuBar && ancestorMenuBar.role !== \"menubar\") {\n      ancestorMenuBar = ancestorMenuBar.parent;\n    }\n\n    var _ref2 = ancestorMenuBar || {},\n        next = _ref2.next,\n        previous = _ref2.previous,\n        orientation = _ref2.orientation;\n\n    var ancestorIsHorizontal = orientation === \"horizontal\";\n    var dir = usePlacementDir(options.placement);\n    var onKeyDown = useMemo(function () {\n      return createOnKeyDown({\n        onKeyDown: onKeyDownRef,\n        stopPropagation: function stopPropagation(event) {\n          // On Esc, only stop propagation if there's no parent menu.\n          // Otherwise, pressing Esc should close all menus\n          if (hasParent) {\n            return event.key !== \"Escape\";\n          }\n\n          return event.key === \"Escape\";\n        },\n        keyMap: function keyMap(_ref3) {\n          var currentTarget = _ref3.currentTarget,\n              target = _ref3.target;\n          var hide = options.hide;\n\n          var close = hide && function () {\n            return hide();\n          };\n\n          if (hasParent && contains(currentTarget, target)) {\n            // Moves to the next menu button in a horizontal menu bar or\n            // close the menu if it's a sub menu\n            var ArrowRight = ancestorIsHorizontal && dir !== \"left\" ? next && function () {\n              return next();\n            } : dir === \"left\" && close;\n            var ArrowLeft = ancestorIsHorizontal && dir !== \"right\" ? previous && function () {\n              return previous();\n            } : dir === \"right\" && close;\n            return {\n              Escape: close,\n              ArrowRight: ArrowRight,\n              ArrowLeft: ArrowLeft\n            };\n          }\n\n          return {\n            Escape: close\n          };\n        }\n      });\n    }, [hasParent, ancestorIsHorizontal, next, previous, dir, options.hide]);\n    return _objectSpread2({\n      role: \"menu\",\n      onKeyDown: onKeyDown\n    }, htmlProps);\n  }\n});\nvar Menu = createComponent({\n  as: \"div\",\n  useHook: useMenu,\n  useCreateElement: function useCreateElement$1(type, props, children) {\n    process.env.NODE_ENV !== \"production\" ? useWarning(!props[\"aria-label\"] && !props[\"aria-labelledby\"], \"You should provide either `aria-label` or `aria-labelledby` props.\", \"See https://reakit.io/docs/menu\") : void 0;\n    return useCreateElement(type, props, children);\n  }\n});\nexport { Menu, useMenu };","map":null,"metadata":{},"sourceType":"module"}