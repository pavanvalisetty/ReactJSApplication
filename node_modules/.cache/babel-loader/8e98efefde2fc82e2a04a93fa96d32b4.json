{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport '../Button/Button.js';\nimport '../__keys-e6a5cfbe.js';\nimport '../__keys-ed7b48af.js';\nimport '../Disclosure/Disclosure.js';\nimport { useDialogDisclosure } from '../Dialog/DialogDisclosure.js';\nimport { c as POPOVER_DISCLOSURE_KEYS } from '../__keys-26bb1730.js';\nvar usePopoverDisclosure = createHook({\n  name: \"PopoverDisclosure\",\n  compose: useDialogDisclosure,\n  keys: POPOVER_DISCLOSURE_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlRef = _ref.ref,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\"]);\n\n    return _objectSpread2({\n      ref: useForkRef(options.unstable_referenceRef, htmlRef)\n    }, htmlProps);\n  }\n});\nvar PopoverDisclosure = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: usePopoverDisclosure\n});\nexport { PopoverDisclosure, usePopoverDisclosure };","map":null,"metadata":{},"sourceType":"module"}