{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport { c as FORM_INPUT_KEYS } from '../__keys-54ad6269.js';\nimport { g as getInputId, f as formatInputName } from '../getInputId-aa144169.js';\nimport { g as getLabelId } from '../getLabelId-3db05e97.js';\nimport { unstable_getIn } from './utils/getIn.js';\nimport { g as getMessageId, s as shouldShowError } from '../shouldShowError-e8a86b53.js';\nimport { useInput } from '../Input/Input.js';\nvar unstable_useFormInput = createHook({\n  name: \"FormInput\",\n  compose: useInput,\n  keys: FORM_INPUT_KEYS,\n  useOptions: function useOptions(options, _ref) {\n    var name = _ref.name;\n    return _objectSpread2(_objectSpread2({}, options), {}, {\n      name: options.name || name\n    });\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlOnChange = _ref2.onChange,\n        htmlOnBlur = _ref2.onBlur,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"onChange\", \"onBlur\"]);\n\n    var onChangeRef = useLiveRef(htmlOnChange);\n    var onBlurRef = useLiveRef(htmlOnBlur);\n    var onChange = useCallback(function (event) {\n      var _onChangeRef$current, _options$update;\n\n      (_onChangeRef$current = onChangeRef.current) === null || _onChangeRef$current === void 0 ? void 0 : _onChangeRef$current.call(onChangeRef, event);\n      if (event.defaultPrevented) return;\n      (_options$update = options.update) === null || _options$update === void 0 ? void 0 : _options$update.call(options, options.name, event.target.value);\n    }, [options.update, options.name]);\n    var onBlur = useCallback(function (event) {\n      var _onBlurRef$current, _options$blur;\n\n      (_onBlurRef$current = onBlurRef.current) === null || _onBlurRef$current === void 0 ? void 0 : _onBlurRef$current.call(onBlurRef, event);\n      if (event.defaultPrevented) return;\n      (_options$blur = options.blur) === null || _options$blur === void 0 ? void 0 : _options$blur.call(options, options.name);\n    }, [options.blur, options.name]);\n    return _objectSpread2({\n      id: getInputId(options.name, options.baseId),\n      name: formatInputName(options.name),\n      value: unstable_getIn(options.values, options.name, \"\"),\n      \"aria-describedby\": getMessageId(options.name, options.baseId),\n      \"aria-labelledby\": getLabelId(options.name, options.baseId),\n      \"aria-invalid\": shouldShowError(options, options.name),\n      onChange: onChange,\n      onBlur: onBlur\n    }, htmlProps);\n  }\n});\nvar unstable_FormInput = createComponent({\n  as: \"input\",\n  memo: true,\n  useHook: unstable_useFormInput\n});\nexport { unstable_FormInput, unstable_useFormInput };","map":null,"metadata":{},"sourceType":"module"}